{"ast":null,"code":"var _jsxFileName = \"/Users/mperi/Documents/Projects/LogViewer/src/TimeLineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as echarts from \"echarts\";\nimport { groupLogsByHour } from \"./utils/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TimelineChart = _ref => {\n  _s();\n  let {\n    data\n  } = _ref;\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const chartInstance = echarts.init(chartRef.current);\n    const options = {\n      title: {\n        text: \"Timeline Component\"\n      },\n      tooltip: {\n        trigger: \"axis\"\n      },\n      xAxis: {\n        type: \"time\",\n        boundaryGap: false,\n        axisLabel: {\n          formatter: value => new Date(value).toLocaleTimeString()\n        }\n      },\n      yAxis: {\n        type: \"value\",\n        name: \"Event Count\"\n      },\n      series: [{\n        type: \"bar\",\n        data: groupLogsByHour(data).map(d => [new Date(d.time).getTime(), d.count]),\n        barWidth: \"60%\",\n        emphasis: {\n          focus: \"series\" // Improves accessibility when elements are focused\n        }\n      }]\n    };\n    chartInstance.setOption(options);\n    return () => {\n      chartInstance.dispose();\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"img\",\n    \"aria-labelledby\": \"Timeline Chart\",\n    \"aria-describedby\": \"This chart shows you events logged over time\",\n    ref: chartRef,\n    style: {\n      width: \"100%\",\n      height: \"200px\"\n    },\n    tabIndex: 0,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"chartTitle\",\n      style: {\n        display: \"none\"\n      },\n      children: \"Timeline Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"chartDescription\",\n      style: {\n        display: \"none\"\n      },\n      children: \"This chart displays log events grouped by hour.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"chartTooltip\",\n      style: {\n        display: \"none\"\n      },\n      children: \"Hover over the bars to see event counts at specific times.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TimelineChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = TimelineChart;\nexport default TimelineChart;\nvar _c;\n$RefreshReg$(_c, \"TimelineChart\");","map":{"version":3,"names":["React","useEffect","useRef","echarts","groupLogsByHour","jsxDEV","_jsxDEV","TimelineChart","_ref","_s","data","chartRef","chartInstance","init","current","options","title","text","tooltip","trigger","xAxis","type","boundaryGap","axisLabel","formatter","value","Date","toLocaleTimeString","yAxis","name","series","map","d","time","getTime","count","barWidth","emphasis","focus","setOption","dispose","role","ref","style","width","height","tabIndex","children","id","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mperi/Documents/Projects/LogViewer/src/TimeLineChart.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport * as echarts from \"echarts\";\nimport { groupLogsByHour } from \"./utils/index\";\n\nexport const TimelineChart = ({ data }) => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const chartInstance = echarts.init(chartRef.current);\n\n    const options = {\n      title: {\n        text: \"Timeline Component\",\n      },\n      tooltip: {\n        trigger: \"axis\",\n      },\n      xAxis: {\n        type: \"time\",\n        boundaryGap: false,\n        axisLabel: {\n          formatter: (value) => new Date(value).toLocaleTimeString(),\n        },\n      },\n      yAxis: {\n        type: \"value\",\n        name: \"Event Count\",\n      },\n      series: [\n        {\n          type: \"bar\",\n          data: groupLogsByHour(data).map((d) => [\n            new Date(d.time).getTime(),\n            d.count,\n          ]),\n          barWidth: \"60%\",\n          emphasis: {\n            focus: \"series\", // Improves accessibility when elements are focused\n          },\n        },\n      ],\n    };\n\n    chartInstance.setOption(options);\n\n    return () => {\n      chartInstance.dispose();\n    };\n  }, [data]);\n\n  return (\n    <div\n      role=\"img\"\n      aria-labelledby=\"Timeline Chart\"\n      aria-describedby=\"This chart shows you events logged over time\"\n      ref={chartRef}\n      style={{ width: \"100%\", height: \"200px\" }}\n      tabIndex={0}\n    >\n      <h2 id=\"chartTitle\" style={{ display: \"none\" }}>\n        Timeline Component\n      </h2>\n      <p id=\"chartDescription\" style={{ display: \"none\" }}>\n        This chart displays log events grouped by hour.\n      </p>\n      <p id=\"chartTooltip\" style={{ display: \"none\" }}>\n        Hover over the bars to see event counts at specific times.\n      </p>\n    </div>\n  );\n};\n\nexport default TimelineChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,OAAO,MAAM,SAAS;AAClC,SAASC,eAAe,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,aAAa,GAAGC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACpC,MAAMG,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAGT,OAAO,CAACU,IAAI,CAACF,QAAQ,CAACG,OAAO,CAAC;IAEpD,MAAMC,OAAO,GAAG;MACdC,KAAK,EAAE;QACLC,IAAI,EAAE;MACR,CAAC;MACDC,OAAO,EAAE;QACPC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;QACLC,IAAI,EAAE,MAAM;QACZC,WAAW,EAAE,KAAK;QAClBC,SAAS,EAAE;UACTC,SAAS,EAAGC,KAAK,IAAK,IAAIC,IAAI,CAACD,KAAK,CAAC,CAACE,kBAAkB,CAAC;QAC3D;MACF,CAAC;MACDC,KAAK,EAAE;QACLP,IAAI,EAAE,OAAO;QACbQ,IAAI,EAAE;MACR,CAAC;MACDC,MAAM,EAAE,CACN;QACET,IAAI,EAAE,KAAK;QACXX,IAAI,EAAEN,eAAe,CAACM,IAAI,CAAC,CAACqB,GAAG,CAAEC,CAAC,IAAK,CACrC,IAAIN,IAAI,CAACM,CAAC,CAACC,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,EAC1BF,CAAC,CAACG,KAAK,CACR,CAAC;QACFC,QAAQ,EAAE,KAAK;QACfC,QAAQ,EAAE;UACRC,KAAK,EAAE,QAAQ,CAAE;QACnB;MACF,CAAC;IAEL,CAAC;IAED1B,aAAa,CAAC2B,SAAS,CAACxB,OAAO,CAAC;IAEhC,OAAO,MAAM;MACXH,aAAa,CAAC4B,OAAO,CAAC,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAAC9B,IAAI,CAAC,CAAC;EAEV,oBACEJ,OAAA;IACEmC,IAAI,EAAC,KAAK;IACV,mBAAgB,gBAAgB;IAChC,oBAAiB,8CAA8C;IAC/DC,GAAG,EAAE/B,QAAS;IACdgC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAC1CC,QAAQ,EAAE,CAAE;IAAAC,QAAA,gBAEZzC,OAAA;MAAI0C,EAAE,EAAC,YAAY;MAACL,KAAK,EAAE;QAAEM,OAAO,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAEhD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL/C,OAAA;MAAG0C,EAAE,EAAC,kBAAkB;MAACL,KAAK,EAAE;QAAEM,OAAO,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAErD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJ/C,OAAA;MAAG0C,EAAE,EAAC,cAAc;MAACL,KAAK,EAAE;QAAEM,OAAO,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAEjD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAC5C,EAAA,CAlEWF,aAAa;AAAA+C,EAAA,GAAb/C,aAAa;AAoE1B,eAAeA,aAAa;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}